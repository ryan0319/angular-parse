/*! angularparse - v0.2.0 - 2014-09-27
* https://github.com/felipesabino/angular-parse
* Copyright (c) 2014 Felipe Sabino
* Licensed MIT */
(function(){"use strict";angular.module("angularParse.persistence",[]).service("parsePersistence",["$q","$timeout",function(e,r){var n;return n={newObject:function(e){var r;return r=Parse.Object.extend(e),new r},persist:function(n,t,u){var a;return null==t&&(t={}),null==u&&(u="save"),a=e.defer(),n[u].call(n,t).then(function(e){return r(function(){return a.resolve(e)},0)},function(e){return r(function(){return a.reject(e)},0)}),a.promise}},angular.forEach(["save","destroy"],function(e){return n[e]=function(r,t){return n.persist(r,t,e)}}),n}])}).call(this),function(){"use strict";angular.module("angularParse.query",[]).service("parseQuery",["$q","$timeout",function(e,r){var n;return n={newObject:function(e){var r;return r=Parse.Object.extend(e),new Parse.Query(r)},query:function(n,t,u){var a;return null==t&&(t={}),null==u&&(u="find"),a=e.defer(),n[u].call(n,t).then(function(e){return r(function(){return a.resolve(e)},0)},function(e){return r(function(){return a.reject(e)},0)}),a.promise}},angular.forEach(["find","count","get"],function(e){return n[e]=function(r,t){return n.query(r,t,e)}}),n}])}.call(this),function(){"use strict";angular.module("angularParse",["angularParse.persistence","angularParse.query"])}.call(this);